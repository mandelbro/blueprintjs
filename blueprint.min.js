var Blueprint=function($,window,document,undefined){var Blueprint=function(viewController,initElement){return new Blueprint.fn.init(viewController,initElement)};return Blueprint.fn=Blueprint.prototype={constructor:Blueprint,init:function(viewController,initElements){var viewController=$.extend(!0,{},this.fn,viewController);if(initElements instanceof $||$.zepto.isZ(initElements))initElements={main:initElements};return viewController.elements=initElements,viewController.templates={},viewController.model={},viewController.dataScan(initElements.main),typeof viewController.construct=="function"&&viewController.construct(),viewController}},Blueprint.fn.init.prototype=Blueprint,Blueprint.fn.theme=function(template,variables,options){var self=this,buffer;if(typeof this.templates[template]!="function")return;options=$.extend({insertMethod:"append",offsetElement:{},preprocess:null,postprocess:null,afterInsert:null},options),variables=variables?variables:{},typeof options.preprocess=="function"&&options.preprocess.apply(this,[variables]);var buffer=this.templates[template](variables);return typeof options.postprocess=="function"&&options.postprocess.apply(this,[buffer]),options.offsetElement.length?(options.offsetElement[options.insertMethod](buffer),typeof options.afterInsert=="function"&&window.setTimeout(function(){options.afterInsert.call(self,[buffer])},10),buffer):buffer},Blueprint.fn.dataScan=function($element){var self=this;if(!$element)return;$element.find(".json").each(function(){var $this=$(this),key=$this.attr("id")||"data";self.model[key]=$.extend(self.model[key]||{},$.parseJSON($this.text())),$this.remove()})},Blueprint.fn.data=function(key,value){return key=key||"data",typeof key=="object"?($.extend(this.model,key),this):typeof value!="undefined"?(this.model[key]=value,this):this.model[key]},Blueprint}(typeof Zepto=="undefined"?jQuery:Zepto,window,document);